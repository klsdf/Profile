export default {
  // ナビゲーションメニュー
  nav: {
    home: '🎵 インディーズゲーム作品集',
    jobGame: '🎵 商業ゲームプロジェクト経験',
    music: '🎵 音楽作品集',
    art: '🎵 美術作品集',
    article: '🎵 ゲーム研究論文',
    technology: '🎵 技術作品集',
    gameCommunity: '🎵 ゲームコミュニティ運営',
    profile: '🎵 個人履歴書'
  },
  
  // 共通
  common: {
    loading: '読み込み中...',
    error: 'エラーが発生しました',
    back: '戻る',
    more: 'もっと見る',
    play: '再生',
    pause: '一時停止',
    download: 'ダウンロード',
    view: '表示',
    close: '閉じる'
  },
  
  // ゲーム関連
  game: {
    title: 'ゲームタイトル',
    description: 'ゲーム説明',
    genre: 'ジャンル',
    platform: 'プラットフォーム',
    releaseDate: 'リリース日',
    developer: '開発者',
    publisher: '発売元',
    screenshots: 'スクリーンショット',
    videos: '動画',
    downloadLink: 'ダウンロードリンク',
    playOnline: 'オンラインでプレイ',
    githubLink: 'GitHub リンク',
    itchPage: 'Itch ページ',
    downloadAddress: 'ダウンロードアドレス',
    gameRules: 'ゲームルール',
    gameNotFound: 'ゲーム情報が見つかりません。'
  },
  
  // 音楽関連
  music: {
    title: '音楽タイトル',
    composer: '作曲者',
    duration: '時間',
    genre: '音楽ジャンル',
    playMusic: '音楽を再生',
    stopMusic: '音楽を停止',
    creativeIdea: '創作アイデア：'
  },
  
  // 美術関連
  art: {
    title: '作品タイトル',
    artist: 'アーティスト',
    medium: '媒体',
    year: '年',
    description: '作品説明',
    portfolio: '美術・エフェクト作品集',
    artworks: '美術作品',
    effects: '特殊効果'
  },
  
  // 技術関連
  technology: {
    title: '技術タイトル',
    description: '技術説明',
    stack: '技術スタック',
    features: '機能',
    demo: 'デモ',
    sourceCode: 'ソースコード',
    techStack: '私の技術スタック',
    visitRepo: 'リポジトリを訪問',
    projects: [
      {
        name: 'YanGameFramework',
        category: 'ゲームフレームワーク',
        description: 'Unityベースのゲームフレームワークで、完全なローカライゼーションとUIソリューションが内蔵されており、大量のユーティリティライブラリも含まれています。',
        link: 'https://github.com/yourname/YanGameFramework'
      },
      {
        name: 'ButterManager',
        category: 'アセットマネージャー',
        description: 'Electronベースのアセットマネージャーで、ユーザーのコンピューター上の様々なリソースを管理し、ゲーミフィケーション機能を提供します。アプリケーションの使用時間、データ統計、スクリーンショットなどを追跡します。インターネットの発展とハードウェアストレージ価格の継続的な低下により、個人が大容量ストレージを所有することが可能になりました。これにより、「倉鼠症候群」の症例が増加しています。多くの倉鼠症患者は、コレクションが増えるにつれてリソースの管理・整理がますます困難になっていることを発見しており、特にマルチメディア分野ではこの問題が深刻です。この製品は、グリーンゲーム、漫画、映画を管理するための総合マネージャーで、ユーザーに検索、分類、アプリ内ブラウジング機能を提供し、リソースをより簡単に管理できるよう支援します。',
        link: 'https://github.com/yourname/ButterManager'
      },
      {
        name: '帽子社公式サイト',
        category: '公式サイト',
        description: 'コミュニティの日常運営のためのjQuery + Express + Lessベースのウェブサイト。Webフロントエンド + バックエンド + データベース。',
        link: 'https://github.com/klsdf/Hat-Soft.git'
      },
      {
        name: 'QQボット',
        category: 'QQボット',
        description: 'Node.jsベースのQQボットで、ユーザーのコンピューター上の様々なリソースを管理し、ゲーミフィケーション機能を提供します。アプリケーションの使用時間、データ統計、スクリーンショットなどを追跡します。',
        link: 'https://github.com/klsdf/ying-xue-bot.git'
      },
      {
        name: 'ポストプロセシングフレームワーク',
        category: 'ポストプロセシングフレームワーク',
        description: 'Unityベースの2Dポストプロセシングフレームワークで、様々なポストプロセシング効果を実装します。',
        link: 'https://github.com/yourname/unity-postprocess'
      },
      {
        name: 'UI UberShader',
        category: 'UI UberShader',
        description: 'UnityベースのUI UberShaderで、様々なUI効果を実装します。',
        link: 'https://github.com/yourname/unity-ubershader'
      },
      {
        name: 'GameDesignNodeGraph',
        category: 'ゲームデザインノードグラフ',
        description: 'ネイティブJavaScriptベースのGameDesignNodeGraphで、ゲームデザインの様々な構造を体系的に記述・説明し、ノードグラフ形式でデザイナーがゲーム企画書を素早く生成できるよう支援します。',
        link: 'https://github.com/klsdf/GameDesignNodeGraph.git'
      },
      {
        name: 'JapaneseLearnVideoMaker',
        category: '日本語学習動画制作',
        description: 'Python + GPT Sovitベースの日本語学習動画制作ツールで、日本語学習動画を作成します。日本語学習ノートを自動的かつ一括で動画に変換できます。ユーザーは復習したい内容を入力するだけで、AIが自動的に学習資料と音声を生成します。',
        link: 'https://github.com/klsdf/JapenesLearnVideoMaker.git'
      }
    ]
  },
  
  // 記事関連
  article: {
    title: '記事タイトル',
    author: '著者',
    publishDate: '公開日',
    abstract: '要約',
    readMore: '続きを読む',
    download: '論文をダウンロード',
    myPapers: '私のゲーム研究論文',
    clickDownload: 'クリックして文書をダウンロード'
  },
  
  // 個人資料
  profile: {
    name: '名前',
    title: '職位',
    email: 'メール',
    phone: '電話',
    location: '所在地',
    experience: '職歴',
    education: '学歴',
    skills: 'スキル',
    projects: 'プロジェクト経験',
    achievements: '実績',
    educationLabel: '学歴：',
    workExperience: '職歴：',
    skillsLabel: 'スキル：',
    projectsLabel: 'プロジェクト経験：',
    achievementsLabel: '実績：',
    abilitiesTitle: '能力値',
    lifeAchievements: '人生実績パネル'
  },
  
  // ページタイトル
  pages: {
    gamePortfolio: 'ゲーム作品集',
    author: '作者：閻辰祥',
    musicPortfolio: '音楽作品集',
    musicianCert: 'NetEase音楽人・作曲家認定取得済み',
    artPortfolio: '美術作品集',
    technologyPortfolio: '技術作品集',
    articlePortfolio: 'ゲーム研究論文',
    gameCommunity: 'ゲームコミュニティ運営',
    personalResume: '個人履歴書'
  },
  
  // 商業ゲーム関連
  jobGame: {
    title: '商業ゲームプロジェクト経験',
    myRole: '私の役割',
    projectIntro: 'プロジェクト紹介',
    myContribution: '私の貢献',
    gameVideoDemo: 'ゲーム動画デモ'
  },
  
  // コミュニティ運営関連
  community: {
    title: '私のゲームコミュニティ運営成果',
    overview: 'コミュニティ概要',
    coreData: 'コアデータ',
    featuredContent: '精選コンテンツ'
  },
  
  // ゲームデータ
  games: {
    姆姆因子: {
      title: 'ムム因子',
      enTitle: 'Mumu Factor',
      info: '《ムム因子》はRTSの変種ゲームで、プレイヤーは細胞を操作して遺伝子を放出し、より多くの領土を占領し、最終的にすべての敵勢力を殲滅する必要があります。\n\n《ムム因子》は私が2022年のUnreal Game Jamで制作した作品です。\n当時のテーマは「利己的な遺伝子」だったため、「細胞戦争」のテーマを使用することを考えました。細胞が自分のDNA因子を派遣して、互いの領土を侵略できるようにしました。\nドンドン細胞は変異した悪い遺伝子で、宿主の老化を加速し、正常な細胞に感染します。\nムム因子も宿主体内の一種の「良い遺伝子」で、同様に宿主体内の細胞に寄生します。\nムム因子の宿主がすべて殲滅されたため、ムム因子は寄生された宿主を操って迎撃を開始しました。\n\n実際、これはイデオロギーが民衆をコントロールすることへの暗示です。\nムム因子とドンドン因子はどちらも一種のイデオロギー、または命令を表しています。\nムム因子の勝利であれ、ドンドン因子の勝利であれ、宿主にとっては敗北の結末です。\n\n\n\n私はこのゲームを通じて、イデオロギーに巻き込まれないよう、他人のために命を売らないよう表現したいと思います。\n結局のところ、戦争の本質は権力者がエアコンの効いた部屋でコーヒーを飲みながら、農民の息子たちを指揮して、知らない別の農民の息子たちを殺させることです。',
      rulesInfo: '《ムム因子》は比較的伝統的な細胞戦争ゲームで、プレイヤーは細胞を制御して他の細胞を攻撃し、すべての細胞を占領できます。\n1. 両側は1つの細胞から開始\n2. 細胞の遺伝子は自動的に増加\n3. プレイヤーが細胞を選択した後、敵の細胞を右クリックして攻撃できます。各攻撃は自分の遺伝子の半分の数を放出します。例えば、プレイヤーの細胞が100の場合、50の遺伝子を放出して敵を攻撃します。\n4. プレイヤーの遺伝子が途中で中立/敵の細胞に遭遇した場合、攻撃します。\n5. すべての細胞と遺伝子を失った側が敗北。ゲームで他の対戦相手を排除したプレイヤーが勝利。',
      tag: ['RTS', 'シングルマッチ', '細胞戦争']
    },
    还乡: {
      title: '還郷',
      enTitle: 'Return Home',
      info: '《還郷》は私が2023年のGlobal Game Jamで制作した作品で、このgamejamのテーマは「root」でした。\nそのため、\n\n《還郷》は《囲碁》と《追い詰めチェス》に基づくクリエイティブゲームです。\n\nそのため、追い詰めチェスの方式を使用して制作することを考えました。\nゲームの勝利判定では、囲碁の勝率モードを参考にしました。\n\n\n\n\nのインスピレーションは、みんなが子供の頃に紙で自作した新しいチェスから来ています。つまり「追い詰めチェス」と「囲碁の勝率モード」\nすべての駒は自分の駒の隣に置く必要があり、駒は根と葉の関係を形成します。根ノードが死ぬと、すべての葉ノードが死にます。駒はリソースを消費し、自分の駒をリソースノードに分化させる必要があります。全体的な感覚は囲碁に少し似ています。占領する領域が大きいほど、より多くのリソースがあります。囲碁は最後に決済されますが、これは毎ターン現在の領土の資産を決済します。\nPvPの設計コストが高いため、一時的にPvEのタワーディフェンス設計を採用しました。',
      rulesInfo: '1. ゲームはターン制の設計で、プレイヤーは毎ターン1回の操作を実行できます。\n2. 操作は分化と分裂の2つのタイプに分かれます。\n3. プレイヤーは初期に胚細胞を持ち、胚細胞は外側に拡張でき、拡張された細胞は幹細胞になります。\n4. 幹細胞は分化と分裂ができます\n5. 幹細胞が1回分裂すると成長細胞になり、成長細胞は分裂を続けることができますが分化はできません。\n6. 幹細胞のみが分化して、攻撃細胞、防御細胞などを形成できます',
      tag: ['新チェス', 'タワーディフェンス', 'サバイバル']
    },
    山的那边: {
      title: '山の向こう',
      enTitle: 'Beyond the Mountain',
      info: '《山の向こう》はホラー謎解きゲームです\n\nこれは私が制作した最初のゲームです。\nホラー謎解きゲームで、少しメタ要素があります\n《ディアトロフ事件》と少し似ており、前期は温かいRPGゲームで、プレイヤーはゲーム中に多くの奇妙でSAN値を下げるものを見つけます。最後にプレイヤーは自分が実際にはホラーマイズにいることを発見し、2Dゲームと3Dゲームの両方で手がかりを探し、脱出する必要があります。2Dゲームと3Dゲームのマップは共通で、2Dで跳び越えられない穴を見つけた場合、3Dで跳び越えることができます（マリオ）。\nこのように、お互いの特徴と情報格差を利用して補完できます。\nRPGMakerMVで制作。',
      rulesInfo: 'プレイヤーはクリックしてゲーム内の物体と相互作用する必要があります。',
      tag: ['謎解きRPG', 'マルチエンディング', 'ストーリー']
    },
    文芒: {
      title: '文芒',
      enTitle: 'WenMang',
      info: 'ADV文字謎解きゲーム',
      rulesInfo: '',
      tag: ['文字謎解きRPG', 'ナラティブ', 'リニアステージ']
    },
    迪亚特洛夫行动: {
      title: 'ディアトロフ事件',
      enTitle: 'Dyatlov Pass Incident',
      info: 'これはカードベースのメタゲームで、ストーリー背景は古典的な謎「ディアトロフ事件」と古典的なクトゥルフ神話《死の山脈》から来ています。\nプレイヤーは捜索隊を演じ、神秘的な山脈に来て行方不明のディアトロフ隊員を捜索します。',
      rulesInfo: 'ゲームの前期は純粋な2D視点でカードゲームを行い、カードゲームの進行に伴って、ストーリーも継続的に発展し、新しいカードセットが出現します。\nゲームの後期では、《Inscryption》のように、プレイヤーは2Dの画面を離れ、3Dの世界で探索とカード戦闘を行い、仲間の死の原因を探します。',
      tag: ['カードゲーム', 'ナラティブ', 'サバイバル']
    },
    奈尔效应: {
      title: 'ナイル効果',
      enTitle: 'Nile Effect',
      info: '空間謎解きゲーム\nプレイヤーは行列演算を使用して空間を操作し、主人公を終点に到達させる必要があります。',
      rulesInfo: '',
      tag: ['空間謎解き', 'ナラティブ', '手描きスタイル']
    },
    通感: {
      title: '共感覚',
      enTitle: 'Synesthesia',
      info: '共感覚は実験ゲームです。ゲームのすべてのコンテンツは文字で構成されています。\n現代のゲームでは、画面がますます華麗になっていますが、これも過度の情報をもたらし、プレイヤーが「想像」する権利を失わせています。\n私は完全に没入型のゲームを作りたいと思います。ゲーム中、プレイヤーは文字のみで構成された3D世界を彷徨います。文字と音響効果から異なる世界を感じます。同時に、このゲームはゲームコンテンツとしてのゲームの表現形式を探求しようとしています。例えば、文字で恐怖を表現するには？文字で空間感を表現するには？など。全く新しいメディアの可能性を探求することを目指しています。',
      rulesInfo: '共感覚は実験ゲームです。ゲームのすべてのコンテンツは文字で構成されています。',
      tag: ['空間謎解き', 'ナラティブ', '手描きスタイル']
    },
    免费领取JavaScript学习资料: {
      title: '無料JavaScript学習資料取得',
      enTitle: 'Get Free JavaScript Learning Materials',
      info: '実験的なメタゲームで、以前のゲームは強い魔法の輪を持っており、ゲームに入ると常にそのゲームに没入していました。\nこのゲームは主に伝統的なゲームメディアを突破し、ゲームとプレイヤーの関係をより広い次元に拡張したいと考えています。\nこのゲームは以前の設計パラダイムを破り、ゲーム実行時に複数のウィンドウ/ウェブページ/APPで相互に通信し、一緒にゲームをプレイできるようにしました。\nそして、このゲームは反射性を持ち、ゲーム内でゲームの設定ファイルとコードを修正でき、これらのコードの修正もゲームのストーリーの変更を引き起こします。',
      rulesInfo: 'ゲームは7日を1サイクルとして、7日間のコンテンツを継続的に循環します。\n7日以内に、プレイヤーはキャンパス全体を探索し、学習、食事、睡眠、ゴールドコインなどの数値をバランスさせる必要があります。\n最終的に、プレイヤーはヒロインの死の真相を見つける必要があります。',
      tag: ['時間制限キャラクター育成', 'メタゲーム', 'ARG']
    },
    我思故我在: {
      title: '我思う、ゆえに我あり',
      enTitle: 'Cogito Ergo Sum',
      info: 'このゲームはAIGCに基づく実験的ナラティブゲームで、主に電子ゲームにおける創発的構造のナラティブ方式の表現形式を探求しています。AIのコンテンツ出力と使用シナリオにおけるいくつかの問題を解決しようとし、電子ゲームのナラティブ構造に新しい突破口を作り出しています。\n\nAIのジレンマ\n今日のAIの建物は完成していますが、上にはまだ2つの暗雲が浮かんでいます。\n1. コンテンツ出力の一貫性と多様性の間の矛盾\n2. 使用シナリオの合法性と必要性の間の矛盾\n1. ユーザー入力の低い閾値と低い知覚\n\n一貫性と多様性の矛盾とは：AIがプレイヤーにより多くのタイプのコンテンツを提供すれば、その安定性は大幅に低下し、最終的に汎用モデルに退化します。そして、プレイヤーにより客製化されたコンテンツを提供すれば、その多様性は大幅に低下します。\n例えば：ゲームにカスタム武器生成機能を追加したい場合。\n\n合法性と必要性の矛盾とは：AIの使用シナリオが\n\n\n\n伝統的なゲームのナラティブ構造\n伝統的なゲームのナラティブ構造は大まかに7つのタイプに分けることができます：\n- リニアナラティブ（Linear Narrative）\nゲームのストーリーは最初から設定されており、プレイヤーは設定された順序でゲームをプレイするしかありません。\n例えば《The Last of Us》\n- ツリーナラティブ（分岐ナラティブ）\nつまり、マルチエンディングナラティブ。または、ゲーム発展中の特定の重要な操作がゲームのエンディングを変更します。\n例えば《Detroit: Become Human》\n- ネットワークナラティブ\nこの構造では、ツリーナラティブのように一対多、または多対一にすることができ、「タイムライン収束」のような体験を形成します。\n例えば：《Cyberpunk 2077》\n- モジュールナラティブ/フラグメントナラティブ\nストーリー構造を直接示すのではなく、手がかり、日記、記憶、道具などを収集して完全なストーリーを組み立てます。\n例えば《Dark Souls》シリーズ\n- オープンナラティブ（Emergent Narrative）\nこれは実際には上記のフラグメントナラティブと同じです。デザイナーは完成したストーリーを直接指摘するのではなく、様々な手がかりとフラグメント情報を通じて、プレイヤーにストーリーを推測させます。\n例えば《The Elder Scrolls V》\n\n創発的ナラティブ構造\nこのゲームは私が創発的構造と呼ぶ新しいナラティブ構造を使用しています。これは上記のすべてのナラティブ構造とは異なります。\nゲームのすべてのストーリー発展は「状態」によって駆動されるからです。典型的な勇者とドラゴンの戦いのストーリーを例にしましょう。伝統的なナラティブでは、作者は英雄の旅のような構造を使用してストーリーの概要を完成し、その後具体的な詳細を完成させます。創発的構造は異なります。次のストーリーは前のストーリーが何であったかを知覚せず、状態のみを監視します。例えば、勇者とドラゴンの戦いでは、ドラゴンが死んだ時にストーリーが終わると設定します。しかし、ドラゴンがどのように死んだか、このストーリーは知覚しません。勇者に殺された可能性もあり、部下に裏切られた可能性もあり、自分で転落死した可能性もあります。要するに、ストーリーの発展は完全に文脈の論理によって駆動されます。\nゲームには典型的な論理チェーンがあります：目があるから、見ることができる。見ることができるから、どこにいるかを知ることができる。\n同様に、この論理は完全に修正できます：耳があるから、コウモリだから、どこにいるかを知ることができる。\nこのように、私たちは積み木のようにストーリー全体を構築できます。\nそして、このナラティブ構造にはもう一つの特徴があります。それは「並行世界の束縛を破る」ことができることです。勇者とドラゴンの戦いを例にしましょう。王が姫がドラゴンに攫われたことを知ったら、何をするでしょうか？勇者を召集するかもしれませんし、科学技術を発展させるかもしれませんし、自分で武術を鍛えて姫を救うかもしれません。これらはすべて可能な選択肢です。最初の選択肢を選んだ場合、ゲーム内では次のストーリーがあります：\n「王が姫がドラゴンに攫われたことを知ったため、王は勇者を召集した。」\n私たちのナラティブ構造では、2番目の選択肢は新しい分岐ストーリーを表すのではなく、状態を表します。状態は共存できます。この時、2番目の選択肢を同時に選ぶことができます。すると、状態は「王が勇者を召集した」と「王が科学技術を発展させた」の両方になります。この2つの状態の下で、新しいストーリーが派生する可能性があります：「勇者がサブマシンガンの使用方法を学んだ」\n気づきましたか？伝統的なゲームでは、2番目の選択肢は新しいストーリーラインに入りますが、創発的構造では、この状態を追加するだけです。\nしたがって、このゲームでは、主人公が同時に教室と寝室にいる状況も見られます。これはバグではなく、創発的構造による特性です。',
      rulesInfo: '',
      tag: ['シュルレアリスム', '実験ゲーム', '意識流']
    },
    气泡迷因: {
      title: 'バブルミーム',
      enTitle: 'Bubble Meme',
      info: '《バブルミーム》はナラティブ謎解きゲームです。プレイヤーはゲーム内で「バブル化」できるものを探す必要があります。\nこのゲームは謎解き部分で状態ベースの推論を採用し、伝統的なクリック謎解きのジレンマを部分的に解決しました。プレイヤーの各クリックは情報を学習し、完全に新しい状態に入るのではありません。\n例えば、最初のクリックで、プレイヤーは丸いものがクリックできることを知り、すぐに次のステップは顔をクリックすることをプレイヤーに伝えます。顔をクリックした後、頭をクリックすることをプレイヤーに伝えます。後の謎はますます抽象的になりますが、プレイヤーの論理は依然として非常に明確です。このメカニズムは謎解きプロセスに直接思考チェーンを埋め込むことに相当するからです。伝統的な謎解きゲームのように、単純に瓶を与えてプレイヤーにその瓶が何に使えるかを推測させるのではありません。\nすべての謎は再考を必要とします。',
      rulesInfo: 'プレイヤーはゲーム内の様々な物体と相互作用し、ミームの範囲を継続的に拡大する必要があります。',
      tag: ['ミーム', 'シュルレアリスム', 'アート']
    },
    抽卡合成大乱斗: {
      title: 'カードドロー、合体、大乱闘！',
      enTitle: 'Draw, Merge, Brawl!',
      info: '《カードドロー、合体、大乱闘！》はRTSゲームメカニクスへの探索的試みです。\n伝統的なRTSゲームが没落した理由は以下の通りです：\n1. \n2. \n3. \n\nこのゲームはモバイルゲームカードドローシミュレーションゲームです。プレイヤーはゲーム内リソースを使用してカードをドローし、ドローしたカードをフィールドに出すと様々な効果を生み出します：例えば、兵士カードは自動的に兵士を生成して相手を攻撃します；バフカードは周囲のカードにバフをかけます。2枚のカードを重ねると合体できます：同種類のカードはアップグレードし、異なる種類のカードは新しいカードに融合します。同時に、このゲームは軽量のDBG要素も持っており、プレイヤーはゲーム内でカードプールのカード組み合わせを修正できます。\n全体的に、このゲームは開始難易度が極めて低く、同時に一定の戦略的深度があり、繰り返し体験する価値があります。',
      rulesInfo: '',
      tag: ['カードドロー', 'シュルレアリスム', 'アート']
    },
    林西物语: {
      title: '林西物語',
      enTitle: 'Linxi Story',
      info: '伝統的なローグライク+育成RPGゲーム\n\n主人公は仲間たちと何度もダンジョンを探索し、ダンジョンから得たリソースを利用して自分のチームを育成する必要があります。\n\nゲームルール：\n1. 私が動けば敵も動くターン制\n2.',
      rulesInfo: '',
      tag: ['ローグライク', 'マルチエンディング', 'RPG']
    },
    宿醉阿弥陀佛: {
      title: '二日酔い阿弥陀仏',
      enTitle: 'Drunken Amitabha',
      info: '世界が破壊されました\n\nルール：\n1. ゲームの核心ルールは障害物回避です。ゲーム中、画面上に様々な物体がランダムに浮かんできます。プレイヤーは素早く反応して、避けるべきか捕まえるべきかを判断する必要があります。\n1.1. 赤い感嘆符は障害物が浮かんでくることを表し、プレイヤーが避ける必要があります。避けなかった場合、酒瓶が壊れて酒量を消費します。\n1.2. 緑の酒瓶は酒が浮かんでくることを表し、プレイヤーが捕まえる必要があります。捕まえた場合、新しい酒瓶を獲得し、酒量を増加させます。\n2. プレイヤーは走行中に継続的に酒量を消費する必要があります。酒量はプレイヤーの生命値と同等で、生命値が尽きると、\n3. 一定時間障害物に触れないと、フィーバーモードに入ることができます。フィーバーモードでは、全画面に短時間大量の酒が出現します。この時、プレイヤーはコントローラーと左スティックを激しく振って、できるだけ多くの酒を収集する必要があります。',
      rulesInfo: '',
      tag: ['コラージュアート', '3D東方', 'ニヒリズム']
    }
  }
}
